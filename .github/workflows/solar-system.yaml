name: Solar System Workflow production Deploy & CI/CD
on:
  push:
    branches:
      - 'feature/*'  
      
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing 
        services:
           mongo-db:
             image: siddharth67/mongo-db:non-prod
             ports:
                - 27017:27017
        env:
            MONGO_URI: 'mongodb://localhost:27017/superData'
            MONGO_USERNAME: non-prod-user
            MONGO_PASSWORD: non-prod-password
        strategy:
            matrix:
                node-version: [18,20]
                operating-system: [ubuntu-latest]
        runs-on: ${{ matrix.operating-system }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Node Js Version ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.node-version }}
            - name: cache npm dependencies
              uses: actions/cache@v3
              with:
               path: node_modules
               key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            - name: Install Dependencies
              run: npm install
            - name: Run Unit Tests
              run: npm test
            - name: Archive Test Results
              uses: actions/upload-artifact@v4
              with:
                name: Mocha-Test-Results ${{ matrix.operating-system }}-Node${{ matrix.node-version }}
                path: test-results.xml
                overwrite: true
    code-coverage:
        name: Code Coverage
        container:
           image: node:18
        services:
           mongo-db:
             image: siddharth67/mongo-db:non-prod
             options:
                --name mongo
        env:
            MONGO_URI: 'mongodb://mongo:27017/superData'
            MONGO_USERNAME: non-prod-user
            MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
           # - name: Setup Node.js
           #   uses: actions/setup-node@v3
           #   with:
           #     node-version: 18
            - name: cache npm dependencies
              uses: actions/cache@v3
              with:
               path: node_modules
               key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            - name: Install Dependencies
              run: npm install
            - name: Run Code Coverage
              continue-on-error: true
              run: npm run coverage
            - name: Archive Test results
              uses: actions/upload-artifact@v4
              with:
                name: Coverage Report
                path: coverage
                retention-days: 5

    Docker:
        name: Docker Build and Push
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Build the docker image
              uses: docker/build-push-action@v4
              with:
                context: .
                push: false
                tags: ${{ vars.DOCKER_HUB_USERNAME }}/solar-system:${{ github.sha }}
            - name: Docker image testing
              run: |
                docker run --name solar-system-app -d \
                    -p 3000:3000 \
                    -e MONGO_URI=${{ env.MONGO_URI }} \
                    -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
                    -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
                    ${{ vars.DOCKER_HUB_USERNAME }}/solar-system:${{ github.sha }}

                    export IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                    echo $IP

                    echo Testing Image URL using Wget
                    wget -q -O- http://127.0.0.0:3000/live || grep live

            - name: Push Docker image to Docker Hub
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: ${{ vars.DOCKER_HUB_USERNAME }}/solar-system:${{ github.sha }}
  
    dev-deploy: 
      if: contains(github.ref, 'feature/')
      needs: Docker
      uses: ./.github/workflows/reuasable-workflow.yaml
      secrets:
        mongodb_password: ${{ secrets.mongodb_password }}
        ngrok_authtoken: ${{ secrets.ngrok_authtoken }}
      with:
        environment: development
        k8s-manifests-path: kubernetes/development/

    prod-deploy:
      if: github.ref == 'refs/heads/main' 
      needs: Docker
      uses: ./.github/workflows/reuasable-workflow.yaml
      secrets:
        mongodb_password: ${{ secrets.mongodb_password }}
        ngrok_authtoken: ${{ secrets.ngrok_authtoken }}
      with:
        environment: production
        k8s-manifests-path: kubernetes/production/
